{"version":3,"sources":["scripts/addBorder.js","components/grid.js","scripts/randomColor.js","App.js","reportWebVitals.js","index.js"],"names":["borderResources","addBorders","objects","size","lastRow","length","rollOver","forEach","pixel","i","style","borderBottom","element","borderRight","borderBottomRight","removeBorders","border","Grids","hoverEffect","gridIndex","push","Fragment","map","index","onMouseEnter","rgbRoll","Math","floor","random","randomRGB","hoverFunction","e","r","g","b","target","animation","background","App","useState","showGrid","setShowGrid","gridSize","setGridSize","newSize","inputSize","setInputSize","display","gridTemplateColumns","gridTemplateRows","color","width","height","gridStyle","setGridStyle","useEffect","grid","document","querySelector","pixels","querySelectorAll","handleOnChange","prevState","name","max","Number","min","value","className","htmlFor","flexDirection","justifyContent","type","id","onChange","gap","onClick","marginTop","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.236ade61.chunk.js","sourcesContent":["const borderBottomRight = (element) => {\n  element.style.borderBottom = '1px solid #DEDEDF';\n  element.style.borderRight = '1px solid #DEDEDF';\n};\n\nconst borderBottom = (element) => {\n  element.style.borderBottom = '1px solid #DEDEDF';\n}\n\nconst borderRight = (element) => {\n  element.style.borderRight = '1px solid #DEDEDF';\n}\n\nfunction addBorders(objects, size) {\n    const lastRow = objects.length - size;\n    const rollOver = size -1;\n    objects.forEach((pixel, i) => {\n        if (i < lastRow) {\n            i % size === rollOver ? borderBottom(pixel) : borderBottomRight(pixel);\n        } else {\n            if (i % size !== rollOver) {\n                borderRight(pixel);\n            };\n        };\n    });\n};\n\nfunction removeBorders(objects) {\n    objects.forEach(pixel => pixel.style.border = 'none');\n};\n\nconst borderResources = { addBorders, removeBorders };\n\nexport default borderResources;","import React from 'react';\n\nconst Grids = ({ size, hoverEffect }) => {\n    let gridIndex = [];\n    for (let i = 0; i < size ** 2; i++) {\n        gridIndex.push(i);\n    };\n\n    // const handleMouseLeave = (e) => {\n    //     setTimeout(function delay() {\n    //         e.target.style.background = '#08060B';\n    //         e.target.style.animation = 'hover-effect 700ms ease-out'\n    //     }, trailDuration)\n    // }\n\n\n    return (\n        <React.Fragment>\n            {gridIndex.map(index => {\n                return <div key={index} onMouseEnter={hoverEffect}></div>\n            })}\n        </React.Fragment>\n    );\n}\n\n\nexport default Grids;","const rgbRoll = () => Math.floor(Math.random() * 256)\n\nfunction randomRGB() {\n    const r = rgbRoll();\n    const g = rgbRoll();\n    const b = rgbRoll();\n    return [r, g, b];\n}\n\n\nexport default randomRGB;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport borderResources from './scripts/addBorder';\nimport Grids from './components/grid.js';\nimport randomRGB from './scripts/randomColor';\n\nconst { addBorders, removeBorders } = borderResources;\n\nconst hoverFunction = (e) => {\n  const [r, g, b] = randomRGB();\n  e.target.style.animation = 'hover-effect 2000ms ease-in';\n  e.target.style.background = `rgb(${r},${g},${b})`;\n};\n\n\nfunction App() {\n\n  const [showGrid, setShowGrid] = useState(() => false);\n  const [gridSize, setGridSize] = useState(() => 16);\n  const [inputSize, setInputSize] = useState(() => ({\n    newSize: gridSize,\n  }));\n  const [gridStyle, setGridStyle] = useState(() => ({\n    display: 'grid',\n    gridTemplateColumns: `repeat(${gridSize}, 1fr)`,\n    gridTemplateRows: `repeat(${gridSize}, 1fr)`,\n    color: '#DEDEDF',\n    width: '100vmin',\n    height: '100vmin'\n  }))\n\n  useEffect(() => {\n    const grid = document.querySelector('.App-grid');\n    const pixels = document.querySelectorAll('.App-grid div');\n    showGrid ? addBorders(pixels, gridSize) : removeBorders(pixels);\n    showGrid ? grid.style.border = '1px solid #DEDEDF' : grid.style.border = 'none';\n  }, [showGrid, gridSize])\n\n  const handleOnChange = (e) => {\n    setInputSize(prevState => {\n      return {...prevState, [e.target.name]: Math.max(Number(e.target.min), Math.min(Number(e.target.value), Number(e.target.max)))}\n    });\n  }\n\n  const clearOnClick = () => {\n    const pixels = document.querySelectorAll('.App-grid div');\n    pixels.forEach(pixel => pixel.style.background = '#08060B');\n  }\n  \n  const newOnClick = () => {\n    const size = inputSize.newSize;\n    setGridStyle(prevState => {\n      return {...prevState, gridTemplateColumns: `repeat(${size}, 1fr)`, gridTemplateRows: `repeat(${size}, 1fr)`};\n    })\n    setGridSize(prevState => size);\n  }\n\n  const gridViewOnChange = () => {\n    setShowGrid(prevState => !prevState);\n  }\n\n  \n  return (\n    <div className=\"App\">\n      <div className=\"App-settings\">\n        <label htmlFor='inputSize'>Grid size</label>\n        <div style={{display: 'flex', flexDirection: 'row', width: '100%', justifyContent: 'center'}}>\n          <h3> <input type='number' id='inputSize' name='newSize' value={inputSize.newSize} min={2} max={128} onChange={handleOnChange}/> x {inputSize.newSize}</h3>\n        </div>\n        <input type='range' id='inputSize' name='newSize' value={inputSize.newSize} min={2} max={128} onChange={handleOnChange}/>\n        <div style={{display: 'flex', flexDirection: 'row', width: '100%', justifyContent: 'center', gap: '5px'}}>\n          <button onClick={clearOnClick}>Clear</button>\n          <button onClick={newOnClick}>New</button>\n        </div>\n        <div style={{display: 'flex', flexDirection: 'column', gap: '4px', marginTop: '2%'}}>\n          <label htmlFor='switchGridView'>Grid view</label>\n          <label className=\"switch\">\n            <input type=\"checkbox\" id='switchGridView' onChange={gridViewOnChange} name='showGrid' checked={showGrid}/>\n            <span className=\"slider round\"></span>\n          </label>\n        </div>\n      </div>\n      <div className=\"App-grid\" style={gridStyle}>\n        <Grids size={gridSize} hoverEffect={hoverFunction} />\n      </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}